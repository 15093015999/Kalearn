#pragma checksum "E:\天蓝蓝考试系统\SkyBlueBlue\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ef49c149838b3dae1b1733095f76786b0938fa4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\天蓝蓝考试系统\SkyBlueBlue\Views\_ViewImports.cshtml"
using SkyBlueBlue;

#line default
#line hidden
#line 2 "E:\天蓝蓝考试系统\SkyBlueBlue\Views\_ViewImports.cshtml"
using SkyBlueBlue.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ef49c149838b3dae1b1733095f76786b0938fa4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2769b4ee00c9af1927105065dbc82ec6231c0cff", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<string>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "E:\天蓝蓝考试系统\SkyBlueBlue\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "天蓝蓝考试系统";

#line default
#line hidden
            BeginContext(58, 8840, true);
            WriteLiteral(@"<link rel=""stylesheet"" href=""/css/trend.css"" media=""screen"" type=""text/css"" />
<div class=""jumbotron p-3 p-md-5 text-white rounded bg-dark"">
        <div class=""col-md-6 px-0"">
          <h1 class=""display-4 font-italic"">Welcome to use the SkyBlueBlue</h1>
          <p class=""lead my-3"">天蓝蓝(ai kao bu kao)考试系统</p>
        </div>
</div>
<div  class=""jumbotron p-3 p-md-5 text-white rounded bg-dark"">
  <h1 id=""trend"" class=""display-4 font-italic"">成绩曲线</h1>
</div>
<hr>
    <div class=""row mb-2"">
        <div class=""col-md-6"">
          <div class=""card flex-md-row mb-4 box-shadow h-md-250"">
            <div class=""card-body d-flex flex-column align-items-start"">
              <strong class=""d-inline-block mb-2 text-primary"">项目说明</strong>
              <span>
                这是由郑州轻工业学院，
                软件工程（设计与测试）16-01班所做的项目，
                其主要成员有：张连硕，黄洋洋，张磊鑫
              </span>
            </div>
            <img class=""card-img-right flex-auto d-none d-md-block"" data-src=""holder.js/200x25");
            WriteLiteral(@"0?theme=thumb"" alt=""Thumbnail [200x250]"" style=""width: 200px; height: 250px;"" src=""data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22200%22%20height%3D%22250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20200%20250%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16b183e92ac%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16b183e92ac%22%3E%3Crect%20width%3D%22200%22%20height%3D%22250%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2256.203125%22%20y%3D%22131%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E"" data-holder-rendered=""true"">
          </div>
        </div>
        <div class=""col-md-6"">
          <div class=""card flex-md-row mb-4 box-shadow h-md-250"">
            <div class=""card-body d-flex flex-column align-items-start""");
            WriteLiteral(@">
              <strong class=""d-inline-block mb-2 text-success"">没啥可介绍的</strong>
              <h3 class=""mb-0"">
                <a class=""text-dark"" href=""#"">这里就是占位用的</a>
              </h3>
              <div class=""mb-1 text-muted"">下面这段是网上找的</div>
              <p class=""card-text mb-auto"">随着Internet 的迅速发展和广泛普及，网络化教育代表了教育改革的一个发展方向，远程教育成为现代教育技术发展的重要方向之一，考试测试作为远程教育的一个子系统也成为一个重要的研究领域。</p>
            </div>
            <img class=""card-img-right flex-auto d-none d-md-block"" data-src=""holder.js/200x250?theme=thumb"" alt=""Thumbnail [200x250]"" src=""data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22200%22%20height%3D%22250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20200%20250%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16b183e92ae%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs");
            WriteLiteral(@"%3E%3Cg%20id%3D%22holder_16b183e92ae%22%3E%3Crect%20width%3D%22200%22%20height%3D%22250%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2256.203125%22%20y%3D%22131%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E"" data-holder-rendered=""true"" style=""width: 200px; height: 250px;"">
          </div>
        </div>
      </div>
      <br>
      <script src=""/lib/jquery/dist/jquery.min.js""></script>

<script>
  var LineChart = function( options ) {

  var data = options.data;
  var trend = document.getElementById(""trend"");
  var canvas = trend.appendChild( document.createElement( 'canvas' ) );
  var context = canvas.getContext( '2d' );

  var rendering = false,
      paddingX = 40,
      paddingY = 40,
      width = options.width || window.innerWidth,
      height = options.height || window.innerHeight,
      progress = 0;

  canvas.width = width;
  canvas.height = height;

  var maxValue,
      minValue;

  var y1 = paddingY + ( 0.05 * ( height - ( paddingY *");
            WriteLiteral(@" 2 ) ) ),
      y2 = paddingY + ( 0.50 * ( height - ( paddingY * 2 ) ) ),
      y3 = paddingY + ( 0.95 * ( height - ( paddingY * 2 ) ) );
  
  format();
  render();
  
  function format( force ) {

    maxValue = 0;
    minValue = Number.MAX_VALUE;
    
    data.forEach( function( point, i ) {
      maxValue = Math.max( maxValue, point.value );
      minValue = Math.min( minValue, point.value );
    } );

    data.forEach( function( point, i ) {
      point.targetX = paddingX + ( i / ( data.length - 1 ) ) * ( width - ( paddingX * 2 ) );
      point.targetY = paddingY + ( ( point.value - minValue ) / ( maxValue - minValue ) * ( height - ( paddingY * 2 ) ) );
      point.targetY = height - point.targetY;
  
      if( force || ( !point.x && !point.y ) ) {
        point.x = point.targetX + 30;
        point.y = point.targetY;
        point.speed = 0.04 + ( 1 - ( i / data.length ) ) * 0.05;
      }
    } );
    
  }

  function render() {

    if( !rendering ) {
      requestAnima");
            WriteLiteral(@"tionFrame( render );
      return;
    }
    
    context.font = '10px sans-serif';
    context.clearRect( 0, 0, width, height );

    context.fillStyle = '#222';
    context.fillRect( paddingX, y1, width - ( paddingX * 2 ), 1 );
    context.fillRect( paddingX, y2, width - ( paddingX * 2 ), 1 );
    context.fillRect( paddingX, y3, width - ( paddingX * 2 ), 1 );
    
    if( options.yAxisLabel ) {
      context.save();
      context.globalAlpha = progress;
      context.translate( paddingX - 15, height - paddingY - 10 );
      context.rotate( -Math.PI / 2 );
      context.fillStyle = '#fff';
      context.fillText( options.yAxisLabel, 0, 0 );
      context.restore();
    }

    var progressDots = Math.floor( progress * data.length );
    var progressFragment = ( progress * data.length ) - Math.floor( progress * data.length );

    data.forEach( function( point, i ) {
      if( i <= progressDots ) {
        point.x += ( point.targetX - point.x ) * point.speed;
        point.y += ( po");
            WriteLiteral(@"int.targetY - point.y ) * point.speed;

        context.save();
        
        var wordWidth = context.measureText( point.label ).width;
        context.globalAlpha = i === progressDots ? progressFragment : 1;
        context.fillStyle = point.future ? '#aaa' : '#fff';
        context.fillText( point.label, point.x - ( wordWidth / 2 ), height - 18 );

        if( i < progressDots && !point.future ) {
          context.beginPath();
          context.arc( point.x, point.y, 4, 0, Math.PI * 2 );
          context.fillStyle = '#1baee1';
          context.fill();
        }

        context.restore();
      }

    } );

    context.save();
    context.beginPath();
    context.strokeStyle = '#1baee1';
    context.lineWidth = 2;

    var futureStarted = false;

    data.forEach( function( point, i ) {

      if( i <= progressDots ) {

        var px = i === 0 ? data[0].x : data[i-1].x,
            py = i === 0 ? data[0].y : data[i-1].y;

        var x = point.x,
            y = po");
            WriteLiteral(@"int.y;

        if( i === progressDots ) {
          x = px + ( ( x - px ) * progressFragment );
          y = py + ( ( y - py ) * progressFragment );
        }

        if( point.future && !futureStarted ) {
          futureStarted = true;

          context.stroke();
          context.beginPath();
          context.moveTo( px, py );
          context.strokeStyle = '#aaa';

          if( typeof context.setLineDash === 'function' ) {
            context.setLineDash( [2,3] );
          }
        }

        if( i === 0 ) {
          context.moveTo( x, y );
        }
        else {
          context.lineTo( x, y );
        }

      }

    } );

    context.stroke();
    context.restore();

    progress += ( 1 - progress ) * 0.02;
  
    requestAnimationFrame( render );

  }
  
  this.start = function() {
    rendering = true;
  }
  
  this.stop = function() {
    rendering = false;
    progress = 0;
    format( true );
  }
  
  this.restart = function() {
    th");
            WriteLiteral(@"is.stop();
    this.start();
  }
  
  this.append = function( points ) {    
    progress -= points.length / data.length;
    data = data.concat( points );
    
    format();
  }
  
  this.populate = function( points ) {    
    progress = 0;
    data = points;
    
    format();
  }

};

var chart = new LineChart({ data: [] });

reset();

chart.start();

function append() {
  chart.append([
    { label: 'Rnd', value: 1300 + ( Math.random() * 1500 ), future: true }
  ]);
}

function restart() {
  chart.restart();
}


function getSuccesses(){
  let Successes = [];
  $.ajax({
    async:false,
    url:'");
            EndContext();
            BeginContext(8899, 25, false);
#line 258 "E:\天蓝蓝考试系统\SkyBlueBlue\Views\Home\Index.cshtml"
    Write(Url.Action("SuccessData"));

#line default
#line hidden
            EndContext();
            BeginContext(8924, 662, true);
            WriteLiteral(@"',
    type: 'get',
    dataType: 'json',
    success: function (data, status) {
      Successes=data;
    },
    fail: function (err, status) {
      console.log(err)
    }
  });
  return Successes;
} 



function reset() {
  let Successes = getSuccesses();
  let list =[];
  let sumx =0;
  let sumz =0;
  for(var i = 0; i<Successes.length;i++){
    let obj = {label:Successes[i].paper+(i+1),value:100*Successes[i].scores/Successes[i].subtotal};
    sumx+=Successes[i].scores;
    sumz+=Successes[i].subtotal;
    list.push(obj);
  }
  list.push({label:""平均"",value:100*sumx/sumz,future: true });
  chart.populate(list);
}

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<string> Html { get; private set; }
    }
}
#pragma warning restore 1591
